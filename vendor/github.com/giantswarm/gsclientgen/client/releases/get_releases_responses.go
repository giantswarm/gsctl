// Code generated by go-swagger; DO NOT EDIT.

package releases

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/giantswarm/gsclientgen/models"
)

// GetReleasesReader is a Reader for the GetReleases structure.
type GetReleasesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetReleasesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetReleasesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetReleasesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetReleasesOK creates a GetReleasesOK with default headers values
func NewGetReleasesOK() *GetReleasesOK {
	return &GetReleasesOK{}
}

/*GetReleasesOK handles this case with default header values.

Releases list
*/
type GetReleasesOK struct {
	Payload []*models.V4ReleaseListItem
}

func (o *GetReleasesOK) Error() string {
	return fmt.Sprintf("[GET /v4/releases/][%d] getReleasesOK  %+v", 200, o.Payload)
}

func (o *GetReleasesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetReleasesUnauthorized creates a GetReleasesUnauthorized with default headers values
func NewGetReleasesUnauthorized() *GetReleasesUnauthorized {
	return &GetReleasesUnauthorized{}
}

/*GetReleasesUnauthorized handles this case with default header values.

Permission denied
*/
type GetReleasesUnauthorized struct {
	Payload *models.V4GenericResponse
}

func (o *GetReleasesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v4/releases/][%d] getReleasesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetReleasesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V4GenericResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
