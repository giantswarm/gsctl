// Code generated by go-swagger; DO NOT EDIT.

package apps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/giantswarm/gsclientgen/models"
)

// ModifyClusterAppReader is a Reader for the ModifyClusterApp structure.
type ModifyClusterAppReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ModifyClusterAppReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewModifyClusterAppOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewModifyClusterAppBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewModifyClusterAppUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewModifyClusterAppNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewModifyClusterAppDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewModifyClusterAppOK creates a ModifyClusterAppOK with default headers values
func NewModifyClusterAppOK() *ModifyClusterAppOK {
	return &ModifyClusterAppOK{}
}

/*ModifyClusterAppOK handles this case with default header values.

App modified
*/
type ModifyClusterAppOK struct {
	Payload *models.V4App
}

func (o *ModifyClusterAppOK) Error() string {
	return fmt.Sprintf("[PATCH /v4/clusters/{cluster_id}/apps/{app_name}/][%d] modifyClusterAppOK  %+v", 200, o.Payload)
}

func (o *ModifyClusterAppOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V4App)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewModifyClusterAppBadRequest creates a ModifyClusterAppBadRequest with default headers values
func NewModifyClusterAppBadRequest() *ModifyClusterAppBadRequest {
	return &ModifyClusterAppBadRequest{}
}

/*ModifyClusterAppBadRequest handles this case with default header values.

Invalid input
*/
type ModifyClusterAppBadRequest struct {
	Payload *models.V4GenericResponse
}

func (o *ModifyClusterAppBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /v4/clusters/{cluster_id}/apps/{app_name}/][%d] modifyClusterAppBadRequest  %+v", 400, o.Payload)
}

func (o *ModifyClusterAppBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V4GenericResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewModifyClusterAppUnauthorized creates a ModifyClusterAppUnauthorized with default headers values
func NewModifyClusterAppUnauthorized() *ModifyClusterAppUnauthorized {
	return &ModifyClusterAppUnauthorized{}
}

/*ModifyClusterAppUnauthorized handles this case with default header values.

Permission denied
*/
type ModifyClusterAppUnauthorized struct {
	Payload *models.V4GenericResponse
}

func (o *ModifyClusterAppUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /v4/clusters/{cluster_id}/apps/{app_name}/][%d] modifyClusterAppUnauthorized  %+v", 401, o.Payload)
}

func (o *ModifyClusterAppUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V4GenericResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewModifyClusterAppNotFound creates a ModifyClusterAppNotFound with default headers values
func NewModifyClusterAppNotFound() *ModifyClusterAppNotFound {
	return &ModifyClusterAppNotFound{}
}

/*ModifyClusterAppNotFound handles this case with default header values.

App not found
*/
type ModifyClusterAppNotFound struct {
	Payload *models.V4GenericResponse
}

func (o *ModifyClusterAppNotFound) Error() string {
	return fmt.Sprintf("[PATCH /v4/clusters/{cluster_id}/apps/{app_name}/][%d] modifyClusterAppNotFound  %+v", 404, o.Payload)
}

func (o *ModifyClusterAppNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V4GenericResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewModifyClusterAppDefault creates a ModifyClusterAppDefault with default headers values
func NewModifyClusterAppDefault(code int) *ModifyClusterAppDefault {
	return &ModifyClusterAppDefault{
		_statusCode: code,
	}
}

/*ModifyClusterAppDefault handles this case with default header values.

error
*/
type ModifyClusterAppDefault struct {
	_statusCode int

	Payload *models.V4GenericResponse
}

// Code gets the status code for the modify cluster app default response
func (o *ModifyClusterAppDefault) Code() int {
	return o._statusCode
}

func (o *ModifyClusterAppDefault) Error() string {
	return fmt.Sprintf("[PATCH /v4/clusters/{cluster_id}/apps/{app_name}/][%d] modifyClusterApp default  %+v", o._statusCode, o.Payload)
}

func (o *ModifyClusterAppDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V4GenericResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
