// Code generated by go-swagger; DO NOT EDIT.

package app_configs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/giantswarm/gsclientgen/models"
)

// CreateClusterAppConfigReader is a Reader for the CreateClusterAppConfig structure.
type CreateClusterAppConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateClusterAppConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewCreateClusterAppConfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewCreateClusterAppConfigBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewCreateClusterAppConfigUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewCreateClusterAppConfigConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewCreateClusterAppConfigDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreateClusterAppConfigOK creates a CreateClusterAppConfigOK with default headers values
func NewCreateClusterAppConfigOK() *CreateClusterAppConfigOK {
	return &CreateClusterAppConfigOK{}
}

/*CreateClusterAppConfigOK handles this case with default header values.

Success
*/
type CreateClusterAppConfigOK struct {
	Payload *models.V4GenericResponse
}

func (o *CreateClusterAppConfigOK) Error() string {
	return fmt.Sprintf("[PUT /v4/clusters/{cluster_id}/apps/{app_name}/config/][%d] createClusterAppConfigOK  %+v", 200, o.Payload)
}

func (o *CreateClusterAppConfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V4GenericResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateClusterAppConfigBadRequest creates a CreateClusterAppConfigBadRequest with default headers values
func NewCreateClusterAppConfigBadRequest() *CreateClusterAppConfigBadRequest {
	return &CreateClusterAppConfigBadRequest{}
}

/*CreateClusterAppConfigBadRequest handles this case with default header values.

Invalid input
*/
type CreateClusterAppConfigBadRequest struct {
	Payload *models.V4GenericResponse
}

func (o *CreateClusterAppConfigBadRequest) Error() string {
	return fmt.Sprintf("[PUT /v4/clusters/{cluster_id}/apps/{app_name}/config/][%d] createClusterAppConfigBadRequest  %+v", 400, o.Payload)
}

func (o *CreateClusterAppConfigBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V4GenericResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateClusterAppConfigUnauthorized creates a CreateClusterAppConfigUnauthorized with default headers values
func NewCreateClusterAppConfigUnauthorized() *CreateClusterAppConfigUnauthorized {
	return &CreateClusterAppConfigUnauthorized{}
}

/*CreateClusterAppConfigUnauthorized handles this case with default header values.

Permission denied
*/
type CreateClusterAppConfigUnauthorized struct {
	Payload *models.V4GenericResponse
}

func (o *CreateClusterAppConfigUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v4/clusters/{cluster_id}/apps/{app_name}/config/][%d] createClusterAppConfigUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateClusterAppConfigUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V4GenericResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateClusterAppConfigConflict creates a CreateClusterAppConfigConflict with default headers values
func NewCreateClusterAppConfigConflict() *CreateClusterAppConfigConflict {
	return &CreateClusterAppConfigConflict{}
}

/*CreateClusterAppConfigConflict handles this case with default header values.

App config already exists
*/
type CreateClusterAppConfigConflict struct {
	Payload *models.V4GenericResponse
}

func (o *CreateClusterAppConfigConflict) Error() string {
	return fmt.Sprintf("[PUT /v4/clusters/{cluster_id}/apps/{app_name}/config/][%d] createClusterAppConfigConflict  %+v", 409, o.Payload)
}

func (o *CreateClusterAppConfigConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V4GenericResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateClusterAppConfigDefault creates a CreateClusterAppConfigDefault with default headers values
func NewCreateClusterAppConfigDefault(code int) *CreateClusterAppConfigDefault {
	return &CreateClusterAppConfigDefault{
		_statusCode: code,
	}
}

/*CreateClusterAppConfigDefault handles this case with default header values.

Error
*/
type CreateClusterAppConfigDefault struct {
	_statusCode int

	Payload *models.V4GenericResponse
}

// Code gets the status code for the create cluster app config default response
func (o *CreateClusterAppConfigDefault) Code() int {
	return o._statusCode
}

func (o *CreateClusterAppConfigDefault) Error() string {
	return fmt.Sprintf("[PUT /v4/clusters/{cluster_id}/apps/{app_name}/config/][%d] createClusterAppConfig default  %+v", o._statusCode, o.Payload)
}

func (o *CreateClusterAppConfigDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V4GenericResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
