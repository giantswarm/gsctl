// Code generated by go-swagger; DO NOT EDIT.

package organizations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/giantswarm/gsclientgen/models"
)

// ModifyOrganizationReader is a Reader for the ModifyOrganization structure.
type ModifyOrganizationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ModifyOrganizationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewModifyOrganizationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewModifyOrganizationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewModifyOrganizationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewModifyOrganizationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewModifyOrganizationDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewModifyOrganizationOK creates a ModifyOrganizationOK with default headers values
func NewModifyOrganizationOK() *ModifyOrganizationOK {
	return &ModifyOrganizationOK{}
}

/*ModifyOrganizationOK handles this case with default header values.

Organization modified
*/
type ModifyOrganizationOK struct {
	Payload *models.V4Organization
}

func (o *ModifyOrganizationOK) Error() string {
	return fmt.Sprintf("[PATCH /v4/organizations/{organization_id}/][%d] modifyOrganizationOK  %+v", 200, o.Payload)
}

func (o *ModifyOrganizationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V4Organization)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewModifyOrganizationBadRequest creates a ModifyOrganizationBadRequest with default headers values
func NewModifyOrganizationBadRequest() *ModifyOrganizationBadRequest {
	return &ModifyOrganizationBadRequest{}
}

/*ModifyOrganizationBadRequest handles this case with default header values.

Invalid input
*/
type ModifyOrganizationBadRequest struct {
	Payload *models.V4GenericResponse
}

func (o *ModifyOrganizationBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /v4/organizations/{organization_id}/][%d] modifyOrganizationBadRequest  %+v", 400, o.Payload)
}

func (o *ModifyOrganizationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V4GenericResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewModifyOrganizationUnauthorized creates a ModifyOrganizationUnauthorized with default headers values
func NewModifyOrganizationUnauthorized() *ModifyOrganizationUnauthorized {
	return &ModifyOrganizationUnauthorized{}
}

/*ModifyOrganizationUnauthorized handles this case with default header values.

Permission denied
*/
type ModifyOrganizationUnauthorized struct {
	Payload *models.V4GenericResponse
}

func (o *ModifyOrganizationUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /v4/organizations/{organization_id}/][%d] modifyOrganizationUnauthorized  %+v", 401, o.Payload)
}

func (o *ModifyOrganizationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V4GenericResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewModifyOrganizationNotFound creates a ModifyOrganizationNotFound with default headers values
func NewModifyOrganizationNotFound() *ModifyOrganizationNotFound {
	return &ModifyOrganizationNotFound{}
}

/*ModifyOrganizationNotFound handles this case with default header values.

Organization not found
*/
type ModifyOrganizationNotFound struct {
	Payload *models.V4GenericResponse
}

func (o *ModifyOrganizationNotFound) Error() string {
	return fmt.Sprintf("[PATCH /v4/organizations/{organization_id}/][%d] modifyOrganizationNotFound  %+v", 404, o.Payload)
}

func (o *ModifyOrganizationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V4GenericResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewModifyOrganizationDefault creates a ModifyOrganizationDefault with default headers values
func NewModifyOrganizationDefault(code int) *ModifyOrganizationDefault {
	return &ModifyOrganizationDefault{
		_statusCode: code,
	}
}

/*ModifyOrganizationDefault handles this case with default header values.

error
*/
type ModifyOrganizationDefault struct {
	_statusCode int

	Payload *models.V4GenericResponse
}

// Code gets the status code for the modify organization default response
func (o *ModifyOrganizationDefault) Code() int {
	return o._statusCode
}

func (o *ModifyOrganizationDefault) Error() string {
	return fmt.Sprintf("[PATCH /v4/organizations/{organization_id}/][%d] modifyOrganization default  %+v", o._statusCode, o.Payload)
}

func (o *ModifyOrganizationDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V4GenericResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
