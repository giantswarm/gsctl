// Code generated by go-swagger; DO NOT EDIT.

package nodepools

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/giantswarm/gsclientgen/models"
)

// GetNodePoolStatusReader is a Reader for the GetNodePoolStatus structure.
type GetNodePoolStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNodePoolStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetNodePoolStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetNodePoolStatusUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetNodePoolStatusNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetNodePoolStatusDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetNodePoolStatusOK creates a GetNodePoolStatusOK with default headers values
func NewGetNodePoolStatusOK() *GetNodePoolStatusOK {
	return &GetNodePoolStatusOK{}
}

/*GetNodePoolStatusOK handles this case with default header values.

Node pool status
*/
type GetNodePoolStatusOK struct {
	Payload models.V5GetNodePoolStatusResponse
}

func (o *GetNodePoolStatusOK) Error() string {
	return fmt.Sprintf("[GET /v5/clusters/{cluster_id}/nodepools/{nodepool_id}/status/][%d] getNodePoolStatusOK  %+v", 200, o.Payload)
}

func (o *GetNodePoolStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNodePoolStatusUnauthorized creates a GetNodePoolStatusUnauthorized with default headers values
func NewGetNodePoolStatusUnauthorized() *GetNodePoolStatusUnauthorized {
	return &GetNodePoolStatusUnauthorized{}
}

/*GetNodePoolStatusUnauthorized handles this case with default header values.

Permission denied
*/
type GetNodePoolStatusUnauthorized struct {
	Payload *models.V4GenericResponse
}

func (o *GetNodePoolStatusUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v5/clusters/{cluster_id}/nodepools/{nodepool_id}/status/][%d] getNodePoolStatusUnauthorized  %+v", 401, o.Payload)
}

func (o *GetNodePoolStatusUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V4GenericResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNodePoolStatusNotFound creates a GetNodePoolStatusNotFound with default headers values
func NewGetNodePoolStatusNotFound() *GetNodePoolStatusNotFound {
	return &GetNodePoolStatusNotFound{}
}

/*GetNodePoolStatusNotFound handles this case with default header values.

Not found
*/
type GetNodePoolStatusNotFound struct {
	Payload *models.V4GenericResponse
}

func (o *GetNodePoolStatusNotFound) Error() string {
	return fmt.Sprintf("[GET /v5/clusters/{cluster_id}/nodepools/{nodepool_id}/status/][%d] getNodePoolStatusNotFound  %+v", 404, o.Payload)
}

func (o *GetNodePoolStatusNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V4GenericResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNodePoolStatusDefault creates a GetNodePoolStatusDefault with default headers values
func NewGetNodePoolStatusDefault(code int) *GetNodePoolStatusDefault {
	return &GetNodePoolStatusDefault{
		_statusCode: code,
	}
}

/*GetNodePoolStatusDefault handles this case with default header values.

error
*/
type GetNodePoolStatusDefault struct {
	_statusCode int

	Payload *models.V4GenericResponse
}

// Code gets the status code for the get node pool status default response
func (o *GetNodePoolStatusDefault) Code() int {
	return o._statusCode
}

func (o *GetNodePoolStatusDefault) Error() string {
	return fmt.Sprintf("[GET /v5/clusters/{cluster_id}/nodepools/{nodepool_id}/status/][%d] getNodePoolStatus default  %+v", o._statusCode, o.Payload)
}

func (o *GetNodePoolStatusDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V4GenericResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
