// Code generated by go-swagger; DO NOT EDIT.

package clusters

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/giantswarm/gsclientgen/models"
)

// GetClusterStatusReader is a Reader for the GetClusterStatus structure.
type GetClusterStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetClusterStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetClusterStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetClusterStatusUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetClusterStatusDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetClusterStatusOK creates a GetClusterStatusOK with default headers values
func NewGetClusterStatusOK() *GetClusterStatusOK {
	return &GetClusterStatusOK{}
}

/*GetClusterStatusOK handles this case with default header values.

Cluster status
*/
type GetClusterStatusOK struct {
	Payload models.V4GetClusterStatusResponse
}

func (o *GetClusterStatusOK) Error() string {
	return fmt.Sprintf("[GET /v4/clusters/{cluster_id}/status/][%d] getClusterStatusOK  %+v", 200, o.Payload)
}

func (o *GetClusterStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClusterStatusUnauthorized creates a GetClusterStatusUnauthorized with default headers values
func NewGetClusterStatusUnauthorized() *GetClusterStatusUnauthorized {
	return &GetClusterStatusUnauthorized{}
}

/*GetClusterStatusUnauthorized handles this case with default header values.

Permission denied
*/
type GetClusterStatusUnauthorized struct {
	Payload *models.V4GenericResponse
}

func (o *GetClusterStatusUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v4/clusters/{cluster_id}/status/][%d] getClusterStatusUnauthorized  %+v", 401, o.Payload)
}

func (o *GetClusterStatusUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V4GenericResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClusterStatusDefault creates a GetClusterStatusDefault with default headers values
func NewGetClusterStatusDefault(code int) *GetClusterStatusDefault {
	return &GetClusterStatusDefault{
		_statusCode: code,
	}
}

/*GetClusterStatusDefault handles this case with default header values.

error
*/
type GetClusterStatusDefault struct {
	_statusCode int

	Payload *models.V4GenericResponse
}

// Code gets the status code for the get cluster status default response
func (o *GetClusterStatusDefault) Code() int {
	return o._statusCode
}

func (o *GetClusterStatusDefault) Error() string {
	return fmt.Sprintf("[GET /v4/clusters/{cluster_id}/status/][%d] getClusterStatus default  %+v", o._statusCode, o.Payload)
}

func (o *GetClusterStatusDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V4GenericResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
