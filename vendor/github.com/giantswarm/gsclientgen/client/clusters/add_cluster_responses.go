// Code generated by go-swagger; DO NOT EDIT.

package clusters

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/giantswarm/gsclientgen/models"
)

// AddClusterReader is a Reader for the AddCluster structure.
type AddClusterReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddClusterReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewAddClusterCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewAddClusterUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewAddClusterDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAddClusterCreated creates a AddClusterCreated with default headers values
func NewAddClusterCreated() *AddClusterCreated {
	return &AddClusterCreated{}
}

/*AddClusterCreated handles this case with default header values.

Cluster created
*/
type AddClusterCreated struct {
	/*URI to obtain details on the new cluster using the [getCluster](#operation/getCluster) operation
	 */
	Location string

	Payload *models.V4GenericResponse
}

func (o *AddClusterCreated) Error() string {
	return fmt.Sprintf("[POST /v4/clusters/][%d] addClusterCreated  %+v", 201, o.Payload)
}

func (o *AddClusterCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Location
	o.Location = response.GetHeader("Location")

	o.Payload = new(models.V4GenericResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddClusterUnauthorized creates a AddClusterUnauthorized with default headers values
func NewAddClusterUnauthorized() *AddClusterUnauthorized {
	return &AddClusterUnauthorized{}
}

/*AddClusterUnauthorized handles this case with default header values.

Permission denied
*/
type AddClusterUnauthorized struct {
	Payload *models.V4GenericResponse
}

func (o *AddClusterUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v4/clusters/][%d] addClusterUnauthorized  %+v", 401, o.Payload)
}

func (o *AddClusterUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V4GenericResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddClusterDefault creates a AddClusterDefault with default headers values
func NewAddClusterDefault(code int) *AddClusterDefault {
	return &AddClusterDefault{
		_statusCode: code,
	}
}

/*AddClusterDefault handles this case with default header values.

error
*/
type AddClusterDefault struct {
	_statusCode int

	Payload *models.V4GenericResponse
}

// Code gets the status code for the add cluster default response
func (o *AddClusterDefault) Code() int {
	return o._statusCode
}

func (o *AddClusterDefault) Error() string {
	return fmt.Sprintf("[POST /v4/clusters/][%d] addCluster default  %+v", o._statusCode, o.Payload)
}

func (o *AddClusterDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V4GenericResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
