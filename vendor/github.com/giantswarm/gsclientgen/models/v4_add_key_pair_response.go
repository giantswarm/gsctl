// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V4AddKeyPairResponse v4 add key pair response
// swagger:model V4AddKeyPairResponse
type V4AddKeyPairResponse struct {

	// certificate authority data
	CertificateAuthorityData string `json:"certificate_authority_data,omitempty"`

	// client certificate data
	ClientCertificateData string `json:"client_certificate_data,omitempty"`

	// client key data
	ClientKeyData string `json:"client_key_data,omitempty"`

	// create date
	CreateDate string `json:"create_date,omitempty"`

	// description
	Description string `json:"description,omitempty"`

	// id
	// Required: true
	ID *string `json:"id"`

	// ttl hours
	TTLHours int64 `json:"ttl_hours,omitempty"`
}

// Validate validates this v4 add key pair response
func (m *V4AddKeyPairResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V4AddKeyPairResponse) validateID(formats strfmt.Registry) error {

	if err := validate.Required("id", "body", m.ID); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *V4AddKeyPairResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V4AddKeyPairResponse) UnmarshalBinary(b []byte) error {
	var res V4AddKeyPairResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
