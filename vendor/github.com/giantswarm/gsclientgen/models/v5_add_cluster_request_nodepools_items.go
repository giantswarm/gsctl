// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// V5AddClusterRequestNodepoolsItems Request body structure for creating a node pool
//
// swagger:model v5AddClusterRequestNodepoolsItems
type V5AddClusterRequestNodepoolsItems struct {

	// availability zones
	AvailabilityZones *V5AddClusterRequestNodepoolsItemsAvailabilityZones `json:"availability_zones,omitempty"`

	// Node pool name. _(Length between 1-100, cannot contain control codes such as newline.)_
	//
	Name string `json:"name,omitempty"`

	// node spec
	NodeSpec *V5AddClusterRequestNodepoolsItemsNodeSpec `json:"node_spec,omitempty"`

	// scaling
	Scaling *V5AddClusterRequestNodepoolsItemsScaling `json:"scaling,omitempty"`
}

// Validate validates this v5 add cluster request nodepools items
func (m *V5AddClusterRequestNodepoolsItems) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAvailabilityZones(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNodeSpec(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateScaling(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V5AddClusterRequestNodepoolsItems) validateAvailabilityZones(formats strfmt.Registry) error {

	if swag.IsZero(m.AvailabilityZones) { // not required
		return nil
	}

	if m.AvailabilityZones != nil {
		if err := m.AvailabilityZones.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("availability_zones")
			}
			return err
		}
	}

	return nil
}

func (m *V5AddClusterRequestNodepoolsItems) validateNodeSpec(formats strfmt.Registry) error {

	if swag.IsZero(m.NodeSpec) { // not required
		return nil
	}

	if m.NodeSpec != nil {
		if err := m.NodeSpec.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("node_spec")
			}
			return err
		}
	}

	return nil
}

func (m *V5AddClusterRequestNodepoolsItems) validateScaling(formats strfmt.Registry) error {

	if swag.IsZero(m.Scaling) { // not required
		return nil
	}

	if m.Scaling != nil {
		if err := m.Scaling.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("scaling")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *V5AddClusterRequestNodepoolsItems) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V5AddClusterRequestNodepoolsItems) UnmarshalBinary(b []byte) error {
	var res V5AddClusterRequestNodepoolsItems
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
