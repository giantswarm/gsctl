// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V4AddCredentialsRequestAzureCredential Service principal credential
// swagger:model v4AddCredentialsRequestAzureCredential
type V4AddCredentialsRequestAzureCredential struct {

	// Client ID of the service principal
	// Required: true
	ClientID *string `json:"client_id"`

	// Secret key of the service principal
	// Required: true
	SecretKey *string `json:"secret_key"`

	// Azure subscription ID
	// Required: true
	SubscriptionID *string `json:"subscription_id"`

	// Tenant ID of the Azure subscription
	// Required: true
	TenantID *string `json:"tenant_id"`
}

// Validate validates this v4 add credentials request azure credential
func (m *V4AddCredentialsRequestAzureCredential) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateClientID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSecretKey(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSubscriptionID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTenantID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V4AddCredentialsRequestAzureCredential) validateClientID(formats strfmt.Registry) error {

	if err := validate.Required("client_id", "body", m.ClientID); err != nil {
		return err
	}

	return nil
}

func (m *V4AddCredentialsRequestAzureCredential) validateSecretKey(formats strfmt.Registry) error {

	if err := validate.Required("secret_key", "body", m.SecretKey); err != nil {
		return err
	}

	return nil
}

func (m *V4AddCredentialsRequestAzureCredential) validateSubscriptionID(formats strfmt.Registry) error {

	if err := validate.Required("subscription_id", "body", m.SubscriptionID); err != nil {
		return err
	}

	return nil
}

func (m *V4AddCredentialsRequestAzureCredential) validateTenantID(formats strfmt.Registry) error {

	if err := validate.Required("tenant_id", "body", m.TenantID); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *V4AddCredentialsRequestAzureCredential) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V4AddCredentialsRequestAzureCredential) UnmarshalBinary(b []byte) error {
	var res V4AddCredentialsRequestAzureCredential
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
